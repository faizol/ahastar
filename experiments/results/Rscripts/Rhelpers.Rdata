loadResults <- function(filename, tnames, tclasses)
{
	results <- read.table(filename, col.names=tnames, colClasses=tclasses,
	header = FALSE, sep=",")
	results$map <- gsub("([a-zA-Z0-9-]+/)+", "", results$map)
	results$name <- gsub("\t", "", results$name)
	results$map <- gsub("\t", "", results$map)
	results	
} 

ams <- function(series, dist, stepsize=50) 
{        
	sval <- c() 
	dval <- c()
	nval <- c()

	for(i in seq(1, max(dist), by=stepsize))         
	{
		tmp <- as.data.frame(dist)
		tmp <- cbind(tmp, series)
		if(length(tmp$series[tmp$dist >= i & tmp$dist <i+stepsize]) > 0)
		{
		sval <- c(sval, mean(tmp$series[tmp$dist >= i & tmp$dist < i+stepsize]))
		dval <- c(dval, mean(seq(i, i+stepsize, by=1)))
		nval <- c(nval, 
		length(tmp$series[tmp$dist >= i & tmp$dist<i+stepsize]))
		}
	}

	results <- as.data.frame(dval)
	results <- cbind(results, sval)
	results <- cbind(results, nval)
	names(results) <- c("avgdist", "avgseries", "bucketsize")
	results
}

tms <- function(series, bucketsize=50) {
	tmp <- c()
	for(i in seq(1, length(series), by=bucketsize)) tmp <- c(tmp, mean(series[i:(i+bucketsize-1)]))
	tmp
}

speedup <- function(target, baseline, stepsize=25)
{
	results <- as.data.frame(ams(baseline$ne/target$ne, baseline$opl, stepsize))
	results <- cbind (results[,1:2], 
		ams(baseline$st/target$st, baseline$opl,stepsize)[,2:3])
	names(results) <- c("opl", "ne_speedup", "st_speedup", "num_exp")
	results <- results[results$num_exp > 10,]
	results
}

summary <- function(series, dist, runs=1, stepsize=25)
{
	runrows = length(series)/runs	
	first <- 1
	last <- runrows	
	retval <- ams(series[first:last], dist[first:last], 
			stepsize)[,1:2]

	if(runs > 1)
	{
		for(i in seq(2, runs, by=1))
		{
			first <- first + runrows;
			last <- last + runrows;
			retval <- cbind(retval, ams(series[first:last],
				dist[first:last], stepsize)$avgseries)
		}
	}
	names(retval) <- c("dist", seq(1, runs, by=1))
	retval
}
